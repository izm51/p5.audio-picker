const AudioPicker=(()=>{let e=!1,n,o,r;const t={buttons:[],createButtons:function(t,o=()=>{}){return this.buttons=t.map((t,e)=>{const n=createButton(t.label,e.toString());return n.mousePressed(()=>{this.removeButtons(),o(e)}),n}),this},addStyleToButtons:function(n=()=>{}){return this.buttons.forEach((t,e)=>{n(t,e,this.buttons.length)}),this},removeButtons:function(){for(const t of this.buttons)t.remove();this.buttons=[]}};function u(t){userStartAudio(),n.setSource(t),n.start(),r=o[t]}return{get isMicAllowed(){return e},get isPicked(){return!!n&&!!n.currentSource},get audioIn(){return n},get currentSource(){return r()},getSources:async function(){return getAudioContext().suspend(),await navigator.mediaDevices.getUserMedia({audio:!0}).then(()=>{e=!0}).catch(t=>{throw e=!1,t}),n=new p5.AudioIn,o=await n.getSources(),o},setSources:u,createButtons:function(e=()=>{}){return t.createButtons(o,t=>{u(t),e()})}}})();p5.AudioPicker=AudioPicker;